version: 2.1

parameters:
  gio_action:
    type: enum
    enum: [release, dry_release, nexus_staging, publish_bundles, publish_docs, blank]
    default: blank
  gio_release_version:
    type: string
    default: $GIO_RELEASE_VERSION
  dry_run:
    type: boolean
    default: true
    description: "Run Continuous Deployment of https://docs.gravitee.io in Dry Run Mode ? (if set to true, will actually trigger)"
  # -- Entreprise Edition Package Bundle related params.
  with_ee:
    type: boolean
    default: true
    description: "Run the Package Bundle for Entreprise Edition?"
  ae_version:
    type: string
    default: $AE_VERSION
    description: "The Gravitee.io version number of Alert Engine"
  license_version:
    type: string
    default: $LICENSE_VERSION
    description: "The Gravitee.io version number of the Gravitee.io EE License "
  notifier_slack_version:
    type: string
    default: $NOTIFIER_SLACK_VERSION
    description: "The Gravitee.io version number of the Gravitee.io EE Slack Notifier Plugin"
  notifier_webhook_version:
    type: string
    default: $NOTIFIER_WEBHOOK_VERSION
    description: "The Gravitee.io version number of the Gravitee.io EE Webhook Notifier Plugin"
  notifier_email_version:
    type: string
    default: $NOTIFIER_EMAIL_VERSION
    description: "The Gravitee.io version number of the Gravitee.io EE Email Notifier Plugin"

orbs:
  keeper: gravitee-io/keeper@0.6.2
  gravitee: gravitee-io/gravitee@1.0
  slack: circleci/slack@4.4.0

jobs:
  check-releasejson:
    docker:
      - image: cimg/node:lts
    resource_class: small
    steps:
      - checkout
      - run:
          name: Check if `release.json` is a valid JSON file
          command: npx jsonlint release.json

  bom_to_slack:
    machine:
      image: 'ubuntu-2004:202201-01'
    environment:
      GITHUB_ORG: ${GITHUB_ORG}
      SECRETHUB_ORG: graviteeio
      SECRETHUB_REPO: cicd
      SLACK_ACCESS_TOKEN: $SLACK_ACCESS_TOKEN
    steps:
      - checkout
      - keeper/install
      - gravitee/nexus_staging_prepare_bucket:
          dry_run: true
          maven_container_image_tag: stable-latest
          maven_profile_id: gio-release
          secrethub_org: graviteeio
          secrethub_repo: cicd

      - run:
          name: "Docker pull"
          command: |
                    docker pull quay.io/gravitee-lab/cicd-orchestrator:stable-latest
      - run:
          name: "Gio CICD Orchestrator : Generate Bill Of Material"
          command: |
                    echo "Checking pipeline env. : "
                    ls -allh
                    export GITHUB_ORG=gravitee-io
                    export SECRETHUB_ORG=graviteeio
                    export SECRETHUB_REPO=cicd
                    export MAVEN_PROFILE_ID='gio-release'
                    echo "GITHUB_ORG=${GITHUB_ORG}"
                    echo "SECRETHUB_ORG=${SECRETHUB_ORG}"
                    echo "SECRETHUB_REPO=${SECRETHUB_REPO}"
                    echo "MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    # checking docker image pulled in previous step is tHere
                    docker images
                    # --> .secrets.json is used by Gravitee CI CD Orchestrator to authenticate to Circle CI
                    CCI_SECRET_FILE=$PWD/.secrets.json
                    ksm secret notation keeper://G4hBnFUDBYb9Sw3TxhvjHg/custom_field/.secret.json > ${CCI_SECRET_FILE}
                    ksm secret notation keeper://OFhLNNrENeFGo0zd9JNaJA/custom_field/token > ./.secrethub.credential
                    ls -allh ${CCI_SECRET_FILE}
                    # Docker volumes to map pipeline checked out git tree, .env file and .secrets.json files inside the docker container
                    # export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.env:/graviteeio/cicd/.env -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json"
                    export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json -v $PWD/.secrethub.credential:/graviteeio/cicd/.secrethub.credential"
                    export ENV_VARS="--env GH_ORG=${GITHUB_ORG} --env SECRETHUB_ORG=${SECRETHUB_ORG} --env SECRETHUB_REPO=${SECRETHUB_REPO} --env MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID} --env CIRCLE_BUILD_URL=${CIRCLE_BUILD_URL}"
                    docker run --name orchestrator ${ENV_VARS} ${DOCKER_VOLUMES} --restart no -it quay.io/gravitee-lab/cicd-orchestrator:stable-latest -s bom --dry-run
                    exit "$?"
      - run:
          name: "Display Release B.O.M."
          command: |
                    echo "Here is the generated Release BOM file:"
                    cat ./.circleci/release.bom

  dry_run_orchestrator:
    machine:
      image: 'ubuntu-2004:202201-01'
    environment:
      GITHUB_ORG: ${GITHUB_ORG}
      SECRETHUB_ORG: graviteeio
      SECRETHUB_REPO: cicd
    steps:
      - checkout
      - keeper/install
      - gravitee/nexus_staging_prepare_bucket:
          dry_run: true
          maven_container_image_tag: stable-latest
          maven_profile_id: gio-release
          secrethub_org: graviteeio
          secrethub_repo: cicd

      - run:
          name: "Docker pull"
          command: |
                    docker pull quay.io/gravitee-lab/cicd-orchestrator:stable-latest
      - run:
          name: "Running the Gio CICD Orchestrator as docker container"
          command: |
                    echo "Checking pipeline env. : "
                    ls -allh
                    export GITHUB_ORG=gravitee-io
                    export SECRETHUB_ORG=graviteeio
                    export SECRETHUB_REPO=cicd
                    export MAVEN_PROFILE_ID='gio-release'
                    echo "GITHUB_ORG=${GITHUB_ORG}"
                    echo "SECRETHUB_ORG=${SECRETHUB_ORG}"
                    echo "SECRETHUB_REPO=${SECRETHUB_REPO}"
                    echo "MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    # checking docker image pulled in previous step is tHere
                    docker images
                    # --> .secrets.json is used by Gravitee CI CD Orchestrator to authenticate to Circle CI
                    CCI_SECRET_FILE=$PWD/.secrets.json
                    ksm secret notation keeper://G4hBnFUDBYb9Sw3TxhvjHg/custom_field/.secret.json > ${CCI_SECRET_FILE}
                    ksm secret notation keeper://OFhLNNrENeFGo0zd9JNaJA/custom_field/token > ./.secrethub.credential
                    ls -allh ${CCI_SECRET_FILE}
                    # Docker volumes to map pipeline checked out git tree, .env file and .secrets.json files inside the docker container
                    # export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.env:/graviteeio/cicd/.env -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json"
                    export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json -v $PWD/.secrethub.credential:/graviteeio/cicd/.secrethub.credential"
                    export ENV_VARS="--env GH_ORG=${GITHUB_ORG} --env SECRETHUB_ORG=${SECRETHUB_ORG} --env SECRETHUB_REPO=${SECRETHUB_REPO} --env MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    docker run --name orchestrator ${ENV_VARS} ${DOCKER_VOLUMES} --restart no -it quay.io/gravitee-lab/cicd-orchestrator:stable-latest -s mvn_release --dry-run --branch ${CIRCLE_BRANCH}
                    exit "$?"
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  run_orchestrator:
    machine:
      image: 'ubuntu-2004:202201-01'
    environment:
      GITHUB_ORG: ${GITHUB_ORG}
      SECRETHUB_ORG: graviteeio
      SECRETHUB_REPO: cicd
    steps:
      - checkout
      - keeper/install
      - gravitee/nexus_staging_prepare_bucket:
          dry_run: false
          maven_container_image_tag: stable-latest
          maven_profile_id: gio-release
          secrethub_org: graviteeio
          secrethub_repo: cicd
      - run:
          name: "Docker pull"
          command: |
                    docker pull quay.io/gravitee-lab/cicd-orchestrator:stable-latest
      - run:
          name: "Running the Gio CICD Orchestrator as docker container"
          command: |
                    echo "Checking pipeline env. : "
                    ls -allh
                    export GITHUB_ORG=gravitee-io
                    export SECRETHUB_ORG=graviteeio
                    export SECRETHUB_REPO=cicd
                    export MAVEN_PROFILE_ID='gio-release'
                    echo "GITHUB_ORG=${GITHUB_ORG}"
                    echo "SECRETHUB_ORG=${SECRETHUB_ORG}"
                    echo "SECRETHUB_REPO=${SECRETHUB_REPO}"
                    echo "MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    # checking docker image pulled in previous step is tHere
                    docker images
                    # --> .secrets.json is used by Gravitee CI CD Orchestrator to authenticate to Circle CI
                    CCI_SECRET_FILE=$PWD/.secrets.json
                    ksm secret notation keeper://G4hBnFUDBYb9Sw3TxhvjHg/custom_field/.secret.json > ${CCI_SECRET_FILE}
                    ksm secret notation keeper://OFhLNNrENeFGo0zd9JNaJA/custom_field/token > ./.secrethub.credential
                    ls -allh ${CCI_SECRET_FILE}
                    # Docker volumes to map pipeline checked out git tree, .env file and .secrets.json files inside the docker container
                    # export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.env:/graviteeio/cicd/.env -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json"
                    export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json -v $PWD/.secrethub.credential:/graviteeio/cicd/.secrethub.credential"
                    export ENV_VARS="--env GH_ORG=${GITHUB_ORG} --env SECRETHUB_ORG=${SECRETHUB_ORG} --env SECRETHUB_REPO=${SECRETHUB_REPO} --env MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    docker run --name orchestrator ${ENV_VARS} ${DOCKER_VOLUMES} --restart no -it quay.io/gravitee-lab/cicd-orchestrator:stable-latest -s mvn_release --dry-run false  --branch ${CIRCLE_BRANCH}
                    exit "$?"
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  orchestrated_nexus_staging:
    machine:
      image: 'ubuntu-2004:202201-01'
    environment:
      GITHUB_ORG: ${GITHUB_ORG}
      GIO_PRODUCT_VERSION: << pipeline.parameters.gio_release_version >>
      SECRETHUB_ORG: graviteeio
      SECRETHUB_REPO: cicd
    steps:
      - checkout
      - keeper/install
      - run:
          name: "Go back to release"
          command: |
                    echo "Go back to Release version [${GIO_PRODUCT_VERSION}]"
                    git checkout ${GIO_PRODUCT_VERSION}
                    cat ./release.json
      - run:
          name: "Docker pull"
          command: |
                    docker pull quay.io/gravitee-lab/cicd-orchestrator:stable-latest
      - run:
          name: "Running the Gio CICD Orchestrator as docker container"
          command: |
                    echo "Checking pipeline env. : "
                    ls -allh
                    export GITHUB_ORG=gravitee-io
                    export SECRETHUB_ORG=graviteeio
                    export SECRETHUB_REPO=cicd
                    export MAVEN_PROFILE_ID='gravitee-release'
                    echo "GITHUB_ORG=${GITHUB_ORG}"
                    echo "SECRETHUB_ORG=${SECRETHUB_ORG}"
                    echo "SECRETHUB_REPO=${SECRETHUB_REPO}"
                    echo "MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    # checking docker image pulled in previous step is tHere
                    docker images
                    # --> .secrets.json is used by Gravitee CI CD Orchestrator to authenticate to Circle CI
                    CCI_SECRET_FILE=$PWD/.secrets.json
                    ksm secret notation keeper://G4hBnFUDBYb9Sw3TxhvjHg/custom_field/.secret.json > ${CCI_SECRET_FILE}
                    ksm secret notation keeper://OFhLNNrENeFGo0zd9JNaJA/custom_field/token > ./.secrethub.credential
                    ls -allh ${CCI_SECRET_FILE}
                    # Docker volumes to map pipeline checked out git tree, .env file and .secrets.json files inside the docker container
                    # export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.env:/graviteeio/cicd/.env -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json"
                    export DOCKER_VOLUMES="-v $PWD:/graviteeio/cicd/pipeline -v $PWD/.secrets.json:/graviteeio/cicd/.secrets.json -v $PWD/.secrethub.credential:/graviteeio/cicd/.secrethub.credential"
                    export ENV_VARS="--env GH_ORG=${GITHUB_ORG} --env SECRETHUB_ORG=${SECRETHUB_ORG} --env SECRETHUB_REPO=${SECRETHUB_REPO} --env MAVEN_PROFILE_ID=${MAVEN_PROFILE_ID}"
                    docker run --name orchestrator ${ENV_VARS} ${DOCKER_VOLUMES} --restart no -it quay.io/gravitee-lab/cicd-orchestrator:stable-latest -s mvn_nexus_staging --dry-run false  --branch ${CIRCLE_BRANCH}
                    exit "$?"
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

workflows:
  version: 2.1
  # Blank process invoked when pull requests events are triggered
  validate:
    when:
      equal: [ blank, << pipeline.parameters.gio_action >> ]
    jobs:
      - check-releasejson:
          context: cicd-orchestrator
  dry_release_process:
    when:
      equal: [ dry_release, << pipeline.parameters.gio_action >> ]
    jobs:
      - bom_to_slack:
          context: cicd-orchestrator
          filters:
            branches:
              only:
                - /^[0-9]+.[0-9]+.x/ # e.g. 4.5.x
                - /^[0-9]+.[0-9]+.[0-9]+-beta/ # e.g. 3.0.0-beta
                - master
      - bom_to_slack_approval:
          type: approval
          requires:
            - bom_to_slack
      - dry_run_orchestrator:
          context: cicd-orchestrator
          requires:
            - bom_to_slack_approval
          filters:
            branches:
              only:
                - /^[0-9]+.[0-9]+.x/ # e.g. 4.5.x
                - /^[0-9]+.[0-9]+.[0-9]+-beta/ # e.g. 3.0.0-beta
                - master
  release_process:
    when:
      equal: [ release, << pipeline.parameters.gio_action >> ]
    jobs:
      - bom_to_slack:
          context: cicd-orchestrator
          filters:
            branches:
              only:
                - /^[0-9]+.[0-9]+.x/ # e.g. 4.5.x
                - /^[0-9]+.[0-9]+.[0-9]+-beta/ # e.g. 3.0.0-beta
                - master
                - cicd/3.16.x_secrethub_to_keeper
      - bom_to_slack_approval:
          type: approval
          requires:
            - bom_to_slack
      - run_orchestrator:
          context: cicd-orchestrator
          requires:
            - bom_to_slack_approval
          filters:
            branches:
              only:
                - /^[0-9]+.[0-9]+.x/ # e.g. 4.5.x
                - /^[0-9]+.[0-9]+.[0-9]+-beta/ # e.g. 3.0.0-beta
                - master
  nexus_staging_workflow:
    when:
      equal: [ nexus_staging, << pipeline.parameters.gio_action >> ]
    jobs:
      - orchestrated_nexus_staging:
          context: cicd-orchestrator
          filters:
            tags:
              only:
                - /^[0-9]+.[0-9]+.[0-9]+/

  publish_bundles:
    when:
      equal: [ publish_bundles, << pipeline.parameters.gio_action >> ]
    jobs:
      - gravitee/publish_bundles:
          context: cicd-orchestrator
          dry_run: << pipeline.parameters.dry_run >>
          secrethub_org: graviteeio
          secrethub_repo: cicd
          gio_release_version: << pipeline.parameters.gio_release_version >>
          artifactory_repo_name: "nexus-and-non-dry-run-releases"
          ae_version: << pipeline.parameters.ae_version >>
          license_version: << pipeline.parameters.license_version >>
          notifier_slack_version: << pipeline.parameters.notifier_slack_version >>
          notifier_webhook_version: << pipeline.parameters.notifier_webhook_version >>
          notifier_email_version: << pipeline.parameters.notifier_email_version >>
          with_ee: << pipeline.parameters.with_ee >>

  publish_docs:
    when:
      equal: [ publish_docs, << pipeline.parameters.gio_action >> ]
    jobs:
      - gravitee/publish_docs:
          context: cicd-orchestrator
          dry_run: << pipeline.parameters.dry_run >>
          secrethub_org: graviteeio
          secrethub_repo: cicd
          gio_release_version: << pipeline.parameters.gio_release_version >>
          # pr_source_branch_root: "develop"
          # pr_target_branch: "master"
